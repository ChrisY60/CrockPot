@model CrockPot.ViewModels.EditRecipeViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Select Ingredients</label>
                <br>
                <input class="input-box" type="text" placeholder="Search..." id="ingredientsSearch">
                <div class="scrollable-container">
                    @foreach (var ingredient in Model.AllIngredients)
                    {
                        <div>
                            <input type="checkbox" name="SelectedIngredients" value="@ingredient.Id" @(Model.SelectedIngredients != null && Model.SelectedIngredients.Contains(ingredient.Id) ? "checked" : "")>
                            <label>@ingredient.Name</label>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                <label>Select Categories</label>
                <br />
                <input class="input-box" type="text" placeholder="Search..." id="categoriesSearch">
                <div class="scrollable-container">
                    @foreach (var category in Model.AllCategories)
                    {
                        <div>
                            <input type="checkbox" name="SelectedCategories" value="@category.Id" @(Model.SelectedCategories != null && Model.SelectedCategories.Contains(category.Id) ? "checked" : "")>
                            <label>@category.Name</label>
                        </div>
                    }
                </div>
            </div>
            <br />

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function filterCategoriesCheckboxes() {
            var searchCategoryValue = document.getElementById("categoriesSearch").value.toLowerCase();
            var categoryCheckboxes = document.querySelectorAll('input[name="SelectedCategories"]');

            categoryCheckboxes.forEach(function (checkbox) {
                var label = checkbox.nextElementSibling;
                var categoryName = label.textContent.toLowerCase();

                if (categoryName.includes(searchCategoryValue)) {
                    checkbox.parentNode.style.display = 'block';
                } else {
                    checkbox.parentNode.style.display = 'none';
                }
            });
        }

        function filterIngredientsCheckboxes() {
            var searchIngredientValue = document.getElementById("ingredientsSearch").value.toLowerCase();
            var ingredientCheckboxes = document.querySelectorAll('input[name="SelectedIngredients"]');

            ingredientCheckboxes.forEach(function (checkbox) {
                var label = checkbox.nextElementSibling;
                var ingredientName = label.textContent.toLowerCase();

                if (ingredientName.includes(searchIngredientValue)) {
                    checkbox.parentNode.style.display = 'block';
                } else {
                    checkbox.parentNode.style.display = 'none';
                }
            });
        }

        document.getElementById("categoriesSearch").addEventListener("input", filterCategoriesCheckboxes);

        document.getElementById("ingredientsSearch").addEventListener("input", filterIngredientsCheckboxes);
    </script>
}
